def myOS = ""
pipeline {
  /*
   agent{ 
         label 'build'
        
     }
     */
  //agent any
  agent none

  stages {

    stage('scm') {
      agent {
        label 'build'

      }
      steps {
        script {
          cleanWs()
          try {
            sh "ls -lst"
            myOS = "ubuntu"
          } catch (err) {
            echo err.getMessage()
            echo "Error detected, but we will continue."
            myOS = "windows"
          }
          echo "========>my os is " + myOS

          checkout([$class: 'GitSCM', branches: [
              [name: '*/main']
            ],
            userRemoteConfigs: [
              [url: 'https://github.com/how2coding/react-nodejs-nginx.git']
            ]
          ])

          if (myOS == "ubuntu") {
            sh "ls -lst"
          } else {
            bat 'dir'
          }

        }

      }
    }

    stage('build') {
      agent {
        label 'build'

      }
      steps {
        script {
          if (myOS == "ubuntu") {
            sh "docker build -f Dockerfile-prod -t react-nodejs-nginx ."
            sh "docker tag react-nodejs-nginx registry.wangchan.io:5000/react-nodejs-nginx"
            sh "docker push registry.wangchan.io:5000/react-nodejs-nginx"
          } else {
            bat 'dir'
          }

        }
      }

    }

    stage('run') {
      agent {
        label 'prod-server'

      }
      steps {
        script {
          if (myOS == "ubuntu") {
            sh "docker run --name react -p 8081:8080 -d registry.wangchan.io:5000/react-nodejs-nginx:latest"
          } else {
            bat 'dir'
          }

        }
      }

    }

  }
}